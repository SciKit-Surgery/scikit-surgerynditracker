stages:
  - build
  - installer
  - test
  - deploy


build docs:
  stage: build
  script:
    - tox -e docs
  tags:
    - shared-linux
  artifacts:
    paths:
    - doc/
    expire_in: 1 week


build linux installer:
  stage: build
  script:
    - tox -e installer
  tags:
    - shared-linux
  artifacts:
    paths:
    - dist/
    expire_in: 1 week


build mac installer:
  stage: build
  script:
    - tox -e installer
  tags:
    - shared-mac
  artifacts:
    paths:
    - dist/
    expire_in: 1 week


build windows installer:
  stage: build
  script:
    - tox -e installer
  tags:
    - shared-win
  artifacts:
    paths:
    - dist/
    expire_in: 1 week


test Linux:
  stage: test
  script:
      - tox
  tags:
    - shared-linux
  coverage: '/^TOTAL.*\s+(\d+\%)$/'


test macOS:
  stage: test
  script:
      - tox
  tags:
    - shared-mac


test Windows:
  stage: test
  script:
      - tox
  tags:
    - shared-win


deploy docs to staging:
  stage: deploy
  script:
    # Note: the group/username directory must already exist on the server before calling this command
    - rsync -avz -e'ssh -v' --numeric-ids --delete doc/build/html/* staging_docs_rsync:WEISS/SoftwareRepositories/scikit-surgerynditracker 2>&1
  tags:
    - docs-staging
  environment:
    name: staging
    url: http://weisslab-lin.cs.ucl.ac.uk/staging/WEISS/SoftwareRepositories/scikit-surgerynditracker
  only:
    - master
  dependencies:
    - build docs


deploy docs to production:
  stage: deploy
  script:
    # Note: the group/username directory must already exist on the server before calling this command
    - rsync -avz -e'ssh -v' --numeric-ids --delete doc/build/html/* production_docs_rsync:WEISS/SoftwareRepositories/scikit-surgerynditracker 2>&1
  tags:
    - docs-production
  environment:
    name: production
  only:
    - public
  dependencies:
    - build docs

deploy pip to PyPI:

  stage: deploy
  when: manual
  #  only:
  #  - tags

  environment:
    name: PyPI
    url: https://test.pypi.python.org/pypi/sckit-surgerynditracker

  tags:
    - pip-production

  artifacts:
    paths:
    - dist/

  script:
    # Install packages required to build/publish
    # remove any previous distribution files
    - pip install wheel twine setuptools
    - rm -rf dist

    # bundle installer
    - python setup.py bdist_wheel

    # Upload to pypi
    - twine upload -repository-url https://test.pypi.org/legacy/ dist/* --username $PYPI_TEST_USER --password $PYPI_TEST_PASS
